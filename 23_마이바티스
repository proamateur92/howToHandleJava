## 배경 </br></br>
```
 애플리케이션에서 사용자의 요구 사항에 따라 클래스 기능을 변경하거나 다른 클래스 기능으로 대체하는 경우
수월한 대처를 위해 도입된 기능이 DI와 IoC이다.
```

</br>

##### 19.1 의존성 주입하기  </br></br>
```
"의존성 주입이란 개발자가 직접 코딩을 통해 컴포넌트(클래스)에 부여하는 것이 아니라
컨테이너가 연관 관계를 직접 규정하는 것이다."
그러면 코드에서 직접적인 연관 관계가 발생하지 않아 각 클래스들의 변경이 자유로워진다.(loosely coupled)
서로 관련이 있는 기능들은 강하게 결합(tightly coupled),
관련이 없는 기능들은 약하게 결합(loosely coupled)해야 좋은 프로그램이라고 할 수 있다.
```

</br>
